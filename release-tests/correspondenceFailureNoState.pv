set  verboseClauses = explained.

type key.
free c:channel.

free initKey:key.
free beep:bitstring[private].
fun enc(bitstring,key):bitstring.
reduc forall m:bitstring,k:key; dec(enc(m,k),k)= m.

event stored_key(key).
event beep_received(key).

query k:key; event(beep_received(k)) ==> event(stored_key(k)).

let A =
! new k:key;
out (c, k);
event stored_key(k);
out (c, enc(beep, k)).

let B =
! in(c,k:key);
in (c, xm:bitstring);
if dec(xm, k) = beep then
out(c, xm);
event beep_received(k).

process A | B

